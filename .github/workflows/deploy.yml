name: Deploy to Production

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: prod

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # EC2에 소스 코드만 업로드
      - name: Upload source code to EC2
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: "src/,package.json,package-lock.json,prisma/,tsconfig.json"
          target: ~/crefans
          overwrite: true
          verbose: true

      # EC2에서 빌드 및 배포
      - name: Build and deploy on EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            echo "=== EC2에서 빌드 및 배포 시작 ==="
            cd ~/crefans

            # 환경변수 설정
            echo "${{ secrets.ENV_FILE }}" > .env

            # 의존성 설치
            echo "=== 의존성 설치 ==="
            npm ci

            # TypeScript 빌드
            echo "=== TypeScript 빌드 ==="
            npm run build

            # 빌드 결과 확인
            echo "=== 빌드 결과 확인 ==="
            if [ ! -f "dist/main.js" ]; then
              echo "❌ 빌드 실패: dist/main.js 파일이 없습니다!"
              exit 1
            fi

            echo "✅ 빌드 성공"
            echo "빌드된 파일:"
            ls -la dist/

            # Prisma 설정
            echo "=== Prisma 설정 ==="
            npx prisma generate
            npx prisma migrate deploy

            # 기존 프로세스 중지
            echo "=== 기존 프로세스 중지 ==="
            pm2 stop crefans-server || echo "기존 프로세스가 없습니다."
            pm2 delete crefans-server || echo "기존 프로세스가 없습니다."

            # 새 프로세스 시작
            echo "=== 새 프로세스 시작 ==="
            pm2 start dist/main.js --name crefans-server

            # 프로세스 상태 확인
            echo "=== 프로세스 상태 확인 ==="
            pm2 status

            echo "=== 배포 완료 ==="
